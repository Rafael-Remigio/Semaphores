static void dropPassengersAtTarget (){

    if (semDown (semgid, sh->mutex) == -1) {                                                  /* enter critical region */
        perror ("error on the down operation for semaphore access (PT)");
        exit (EXIT_FAILURE);
    }

        // Updating State 
        sh->fSt.st.pilotStat = DROPING_PASSENGERS;
        // Save State
        saveFlightArrived(nFic, &sh->fSt);
        saveState(nFic, &sh->fSt);
        // Free all passengers 
        for(int i=0;i<sh->fSt.nPassInFlight;i++){
            if (semUp (semgid, sh->passengersWaitInFlight) == -1) {                                  /* Let Passenger leave */
                perror ("error on the down operation for semaphore access (PG)");
                exit (EXIT_FAILURE);
            } 
        }
   
    if (semUp (semgid, sh->mutex) == -1)  {                                                   /* exit critical region */
        perror ("error on the up operation for semaphore access (PT)");
        exit (EXIT_FAILURE);
    }

    
       
    if (semDown (semgid, sh->planeEmpty) == -1) {                                  /* Wait for them to leave */
        perror ("error on the down operation for semaphore access (PG)");
        exit (EXIT_FAILURE);
    }

    

    if (semDown (semgid, sh->mutex) == -1) {                                                  /* enter critical region */
        perror ("error on the down operation for semaphore access (PT)");
        exit (EXIT_FAILURE);
    }

        // Save State
        saveFlightReturning(nFic, &sh->fSt);

    if (semUp (semgid, sh->mutex) == -1)  {                                                   /* exit critical region */
        perror ("error on the up operation for semaphore access (PT)");
        exit (EXIT_FAILURE);
    }
}